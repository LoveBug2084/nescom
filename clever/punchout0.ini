CertainlyCode $1A008 NMI
CertainlyCode $1A000 Reset
#CertainlyCode $1A000 IRQ
JumpTable $1FFFA $1FFFB 2 3 Vectors


JumpTableRoutineWithAppendix $1AED4
CertainlyCode                $1AED4 JumpWithParams
Comment $1AED4 "A = function number, Y = param, X = param"

CertainlyCode $1AA4A SwitchBank
CertainlyCode $1AA48 SwitchBank_02
CertainlyCode $1AA44 SwitchBank_0B
CertainlyCode $1AA40 SwitchBank_08
CertainlyCode $1AA3C SwitchBank_07
CertainlyCode $1AA38 SwitchBank_06
CertainlyCode $1AA50 SwitchBank_06_push
CertainlyCode $1AA54 SwitchBank_07_push
CertainlyCode $1AA58 SwitchBank_08_push
CertainlyCode $1AA5C SwitchBank_09_push
CertainlyCode $1AA60 SwitchBank_0A_push
CertainlyCode $1AA64 SwitchBank_0C_push
CertainlyCode $1AA6A SwitchBank_pop
MapperChangeRoutine $1AA4A reg A
MapperChangeRoutine $1AA48 const 2
MapperChangeRoutine $1AA44 const 11
MapperChangeRoutine $1AA40 const 8
MapperChangeRoutine $1AA3C const 7
MapperChangeRoutine $1AA38 const 6
#
MapperChangeRoutine $1AA50 const 6
MapperChangeRoutine $1AA54 const 7
MapperChangeRoutine $1AA58 const 8
MapperChangeRoutine $1AA5C const 9
MapperChangeRoutine $1AA60 const 10
MapperChangeRoutine $1AA64 const 12
MapperChangeRoutine $1AA6A ram $0E


# Password is at $0140: 0123456789
#            and $0150: 012x345x6789
#            and $041E: 012x345x6789
# 0-9 maps into 01-0A. x = $FF

CertainlyCode $EE53 Password_Copy_Data_To_Show
CertainlyCode $EE3D Password_Copy
RAM $0140 PasswordDigit0
RAM $0141 PasswordDigit1
RAM $0142 PasswordDigit2
RAM $0143 PasswordDigit3
RAM $0144 PasswordDigit4
RAM $0145 PasswordDigit5
RAM $0146 PasswordDigit6
RAM $0147 PasswordDigit7
RAM $0148 PasswordDigit8
RAM $0149 PasswordDigit9
RAM $0150 PasswordShowDigit0
RAM $0151 PasswordShowDigit1
RAM $0152 PasswordShowDigit2
RAM $0154 PasswordShowDigit3
RAM $0155 PasswordShowDigit4
RAM $0156 PasswordShowDigit5
RAM $0158 PasswordShowDigit6
RAM $0159 PasswordShowDigit7
RAM $015A PasswordShowDigit8
RAM $015B PasswordShowDigit9

RAM $0110 PasswordLiteral0
RAM $0111 PasswordLiteral1
RAM $0112 PasswordLiteral2
RAM $0113 PasswordLiteral3
RAM $0114 PasswordLiteral4
RAM $0115 PasswordLiteral5
RAM $0116 PasswordLiteral6
RAM $0117 PasswordLiteral7
RAM $0118 PasswordLiteral8
RAM $0119 PasswordLiteral9
RAM $0120 PasswordBuffer0
RAM $0121 PasswordBuffer1
RAM $0122 PasswordBuffer2
RAM $0123 PasswordBuffer3
RAM $0124 PasswordBuffer4
RAM $0125 PasswordBuffer5
RAM $0126 PasswordBuffer6
RAM $0127 PasswordBuffer7
RAM $0128 PasswordBuffer8
RAM $0129 PasswordBuffer9

CertainlyCode $EFF0 Password_Encode
Comment $EFF0 "Copy gamestate for processing"
Comment $EFFB "Calculate checksum and store in $0138"
Comment $F001 "$0136 = ((~FighterID & 0x30) - 10) >> 2"
RAM $09 FighterID
RAM $08 FightID
Comment $F00F "$0137 = $0133 | $0136;"
Comment $F018 "$010D = {1,2,0,-1, 2,0,1,-1, 0,1,2,-1, -1,-1,-1,-1} [$0137];"
Comment $F01F "$0100 .. $0104 = 0;"

Comment $F07D ""
Comment $F081 "Literal[9] = ($0104 << 5)"
Comment $F081 "Literal[8] = ($0104 << 2) & 0xE0"
Comment $F081 "Literal[7] = ($0103 << 5)"
Comment $F081 "Literal[6] = ($0103 << 2) & 0xE0"
Comment $F081 "Literal[5] = ($0102 << 5)"
Comment $F081 "Literal[4] = ($0102 << 2) & 0xE0"
Comment $F081 "Literal[3] = ($0101 << 5)"
Comment $F081 "Literal[2] = ($0101 << 2) & 0xE0"
Comment $F081 "Literal[1] = ($0100 << 5)"
Comment $F081 "Literal[0] = ($0100 << 2) & 0xE0"
Comment $F09B "for($010B = $010D; $010B; --$010B)"
Comment $F09B "{"
Comment $F0A3 "  for(x=9;;) {"
Comment $F0A5 "    A = $0110[x] & 0x80; $0110[x] <<= 1;"
Comment $F0AB "    if(--x < 0) break;"
Comment $F0AE "    $0110[x] |= (A >> 3);"
Comment $F0B7 "  }"
Comment $F0BA "  $0119 = A;"
Comment $F0BD "}"
Comment $F0C2 "for(x=9; x >= 0; --x)"
Comment $F0C4 "  $0110[x] >>= 5;"
Comment $F0D2 "$0119 |= $010D;"
Comment $F0DB "for(y=9; y >= 0; --y)"
Comment $F0DD "  $0110[y] = ($0110[y] + {6,3,5,7,9,0,1,4,2,8}[y]) % 10;"

#Comment $F043 "A = $0138;"
#Comment $F046 "for(x = 0; x < 3; ++x) {"
#Comment $F048 "  $0100[x] |= (A & 0x30);"
#Comment $F048 "  A <<= 2;"
#Comment $F055 "}"
Comment $F043 "$0100 |= ($0138 << 0) & 0x30;"
Comment $F043 "$0101 |= ($0138 << 2) & 0x30;"
Comment $F043 "$0102 |= ($0138 << 4) & 0x30;"
Comment $F059 "$0103 |= ($0138 >> 2) & 0x30;"
Comment $F066 "$0104 = (($0137 << 4) & 0x30) | ($0137 & 0x0C));"


RAM $0160 NintendoTag_RAM_16bytes
# "NINTENDO.1987RD3"
CertainlyCode $1A1AB NintendoTag_ROM_16bytes



# 075-541-6113  -- Also gives Busy Signal
# 800-422-2602  -- Busy Signal (Nintendo's former phone number)
# 206-882-2040  -- Also gives Busy Signal
#
# 135-792-4680  -- Another World Circuit (select+A+B to register it)
# 106-113-0120  -- See the credits       (select+A+B to register it)
# 007-373-5963  -- Mike Tyson

CertainlyData $EDA2 SomeHardcodedPassword_00
CertainlyData $EDAC SomeHardcodedPassword_0A
CertainlyData $EDB6 SomeHardcodedPassword_14
CertainlyData $EDC0 SomeHardcodedPassword_1E
CertainlyData $EDCA SomeHardcodedPassword_28
CertainlyData $EDD4 SomeHardcodedPassword_32
# 186 652 7224
CertainlyCode $ED5D Test_HardcodedPassword_28_at_0120
CertainlyCode $ED68 Test_HardcodedPassword_32_at_0120
CertainlyCode $ED6C Test_HardcodedPassword_1E_at_0110
CertainlyCode $ED72 Test_HardcodedPassword_1E_at_0120
CertainlyCode $ED7D Test_HardcodedPassword_00_at_0120_then_0A_then_14

CertainlyCode $EEC3 Password_Decode_from_Y
CertainlyCode $EEC1 Password_Decode_from_0120
CertainlyCode $E033 Password_Decode_from_0120_
CertainlyCode $EEBA Password_Decode_from_0110
CertainlyCode $E030 Password_Decode_from_0110_

Comment $EEC3 "for(y=0; y<10; ++y)"
Comment $EEC3 "  $0110[y] = ($0110[y] + 10 - {6,3,5,7,9,0,1,4,2,8}[y]) % 10;"

Comment $EEDA "for($010D = ($010E = $0109 & 3); $010D != 0; --$010D)"
Comment $EEDA "{"
Comment $EEE7 "  for(x=0;;) {"
Comment $EEE7 "    A = ($0110[x] & 1) << 4;"
Comment $EEE7 "    $0110[x] >>= 1;"
Comment $EEF2 "    if(++x == 10) break;"
Comment $EEF7 "    $0110[x] |= A;"
Comment $EEFD "  }"
Comment $EF00 "  $0100 |= ($0109 & 2) << 1;"
Comment $EF0C "}"
Comment $EF11 "$0100 = ($0100 << 3) | $0101;"
Comment $EF11 "$0101 = ($0102 << 3) | $0103;"
Comment $EF11 "$0102 = ($0104 << 3) | $0105;"
Comment $EF11 "$0103 = ($0106 << 3) | $0107;"
Comment $EF11 "$0104 = ($0108 << 3) | $0109;"
Comment $EF28 "$0130 = ($0105 = $0100 & 0x0C) | ($0101 & 3);"
Comment $EF2F "$0131 = ($0105 = $0103 & 0x0C) | ($0102 & 3);"
Comment $EF35 "$0134 = ($0105 = $0102 & 0x0C) | ($0103 & 3);"
Comment $EF3C "$0135 = ($0105 = $0101 & 0x0C) | ($0100 & 3);"
Comment $EF42 "$0138 = ($0100 & 0x30) | (($103 & 0x30) << 2) | (($101 & 0x30) >> 2) | (($102 & 0x30) >> 4);"

Comment $EF66 "$0137 = ($0104 & 0x0C) | ($0104 >> 4)"
Comment $EF7A "$0133 = ($0104 >> 4) & 3"

Comment $EF7F "$0136 = $0137 >> 2;"

CertainlyCode $EEA9 Password_VerifyChecksum
CertainlyCode $EFC3 Password_VerifyFailure
CertainlyCode $EFC0 Password_VerifySuccess
Comment $EEA9 "cmp $0138, ($0134 + $0133 adc $0132 adc $0131 adc $0130) eor 0xFF

Comment $EF87 "if checksum fail, fail"
Comment $EF8C "A = {1,2,0,-1, 2,0,1,-1, 0,1,2,-1, -1,-1,-1,-1}[ $0137];"
Comment $EF8C "if (A < 0) || (A != $010E), fail"
Comment $EF99 "if ($0135 >= 10) || ($0134 >= 10) || ($0133 >= 10) || ($0132 >= 10) || ($0131 >= 10) || ($0130 >= 10), fail"
Comment $EFA5 "A = $0130;"
Comment $EFA5 "if(A == 0) { A = $0131; if(A < 3), fail; }
Comment $EFB1 "if(A < $0134), fail"
Comment $EFB1 "if(A == $0134) { A = $0131; if(A < $0135), fail; }"

RAM $0170 GameStateByte0
RAM $0171 GameStateByte1
RAM $0172 GameStateByte2
RAM $0173 GameStateByte3
RAM $0174 GameStateByte4
RAM $0175 GameStateByte5
CertainlyCode $EFE5 Clear_LoadedGameState
CertainlyCode $E04B Clear_LoadedGameState_
CertainlyCode $EFD2 Password_Load_GameState_from_0110
CertainlyCode $E039 Password_Load_GameState_from_0110_

CertainlyCode $EFC6 Password_Copy_Buffer_To_Literal_10bytes
CertainlyCode $E036 Password_Copy_Buffer_To_Literal_10bytes_

Comment $1A443 "Decode password"
Comment $1A44E "Load gamestate"
Comment $1A451 "Identify fighter (?)"

Comment $1A457 "Clear loaded gamestate"
Comment $1A477 "Translate X into opponent ID: 0,3,7,12,20,13,0,128"
